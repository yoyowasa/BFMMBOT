# configs/base.yml：共通の土台設定（paper/live/backtest から上書きする前提）
# 役割：
# - 戦略しきい値（features.*）と、ガード/リスク/窓/ログをひとまとめにする
# - 自炊ワークフローの整合・安全装置・窓切替がこの数字を読む

env: paper  # 既定は paper（各環境ファイルで上書き）  # 文書準拠
product_code: FX_BTC_JPY  # 対象銘柄は固定（CFD/FX_BTC_JPY）
tick_size: 1  # 価格刻み（1 tick = 1 JPY）

size:  # 取引サイズの下限と既定値
  min: 0.001     # 最小ロット
  default: 0.01  # 既定ロット（最初は小さく）

risk:  # リスク上限と非常停止（Kill-Switch）
  max_inventory: 0.2  # 在庫の絶対上限（BTC）
  kill:
    daily_pnl_jpy: -30000  # 日次損益がこの値を下回ったら停止
    max_dd_jpy: -20000     # ドローダウンがこの値を下回ったら停止

guard:  # ガードレール（相場が速すぎる時は出さない）
  max_mid_move_bp_30s: 25  # 直近30sのミッド変化が25bp超なら停止/縮小

mode_switch:  # “窓”の扱い。メンテ時間/ファンディング計算時刻の前後で挙動変更
  maintenance: { start: "04:00:00", end: "04:10:00", action: "pause" }  # JSTの例
  funding_calc_jst: ["06:00:00","14:00:00","22:00:00"]  # 計算タイミング（受渡は遅延）
  funding_transfer_lag_hours: 8  # 授受のラグ時間（時間）

latency:  # まずは固定遅延のモデル（実測に置換予定）
  rx_ms: 20  # 受信遅延の仮定
  tx_ms: 20  # 送信遅延の仮定

features:  # 戦略のしきい値（#1/#2 の主材料）
  stall_T_ms: 250          # #1 静止→一撃：BestがTms静止
  ca_ratio_win_ms: 500     # #2 C/Aゲート：集計窓（ms）
  ca_threshold: 1.3        # #2 C/Aゲート：Cancel/Add 閾値（以下ならOK）
  min_spread_tick: 1       # 最低スプレッド（tick）
  ttl_ms: 800              # オーダーの寿命（ms）
  age_ms: 200              # Age×MP（OFF時も計算は可能）
  mp_offset_tick: 1.0      # Micropriceオフセット（tick）
  tiny_prints_N: 20        # Tiny-Prints集計N（OFFの初期値）
  tiny_prints_minCount: 14 # Tiny-Prints発火閾値（OFFの初期値）
  eta_t_window_ms: 800     # Queue ETAの窓（OFFの初期値）
  zero_reopen_pop:  # 何をする設定か：ゼロ→再拡大の“一拍だけ”出す戦略のパラメータ

    min_best_age_ms: 200        # 何をする設定か：Bestがこの時間（ms）以上変わらず“落ち着いて”いたら発注を許可
    reopen_stable_ms: 50        # 何をする設定か：再拡大がこの時間（ms）続いたら発注を許可（瞬間ノイズはスルー）
    loss_cooloff_ms: 1500      # 何をする設定か：非常口フラット後に“お休み”する時間ms（連続被弾を防ぐ）
    fee_maker_bp: 0.0        # 何をする設定か：メーカー手数料（bp）。例：-2.0 は -0.02% のリベート、+2.0 は +0.02% の費用
    fee_taker_bp: 0.0        # 何をする設定か：テイカー手数料（bp）。例：10.0 は 0.10%
    edge_bp_min: 0.0         # 何をする設定か：手数料控除後に最低これだけ余裕(bps)がないと発注しない（まずは0.0で様子見）

    max_speed_ticks_per_s: 12.0     # 何をする設定か：midの速さ（tick/秒）がこの上限を超えたら発注しない
    min_spread_tick: 1         # 何をする設定か：再拡大の下限tick（1以上で発注可）
    max_spread_tick: 2         # 何をする設定か：再拡大が広すぎるときは出さない上限tick
    ttl_ms: 800                # 何をする設定か：指値の寿命ms（置きっぱなし防止）
    size_min: 0.001            # 何をする設定か：最小ロット（取引所の最小単位に合わせる）
    cooloff_ms: 250            # 何をする設定か：連打を防ぐ冷却時間ms
    seen_zero_window_ms: 1000  # 何をする設定か：ゼロを“直後”とみなす時間窓ms

strategies:  # まずは2本だけON（他はOFF）
  - stall_then_strike  # #1 静止→一撃
  - cancel_add_gate    # #2 キャンセル比ゲート

logging:  # ログ出力の基本設定
  level: INFO     # paper既定はINFO（paper.ymlでDEBUGに上書き予定）
  rotate_mb: 128  # ログローテーションの閾値（MB）
